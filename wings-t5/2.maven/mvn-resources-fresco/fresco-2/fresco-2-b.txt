========================================================================================

What is a Profile?
What is a Profile?
Set of configurable values applied to Maven Build.
Allows customizing builds for a specific environment.
Enables portability between different build environments.
Types of build profiles

Build Profile Type	Defined in
Per project	pom.xml
Per User/Developer	Maven settings.xml (%USER_HOME%/.m2/settings.xml)
Global	Maven global settings.xml (%M2_HOME%/conf/settings.xml)

======================================================================================

Profile Configuration in Pom.xml
Profiles are configured within <profiles></profiles> under element <project>.
Each profile is defined within <profile></profile> under element <profiles>.
Each profile is identified by a unique profile Id.
A profile is allowed to override the below elements of a Maven build.
Elements allowed in a Profile Configuration:

<project>
    <profiles>
        <profile>
   	    <id>...</id>
            <build>
               <defaultGoal>...</defaultGoal>
               <finalName>...</finalName>
               <resources>...</resources>
               <testResources>...</testResources>
               <plugins>...</plugins>
           </build>
           <reporting>...</reporting>
           <modules>...</modules>
           <dependencies>...</dependencies>
           <dependencyManagement>...</dependencyManagement>
           <distributionManagement>...</distributionManagement>
           <repositories>...</repositories>
           <pluginRepositories>...</pluginRepositories>
           <properties>...</properties>
       </profile>
   </profiles>
</project>

======================================================================================

Profile Activation
Profile Activation
Ways in which build profiles of Maven can be activated/triggered:

Explicitly using commands
Maven settings
Based on environment variables
Operating system settings
Present/missing files

======================================================================================

Profile Activation - Explicit
Configure profiles in Pom.xml

. . .
  <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-antrun-plugin</artifactId>
    <version>1.1</version>           
      <executions> <execution>               
       <id>id.compile</id>
       <phase>compile</phase>
       <goals><goal>run</goal></goals>
       <configuration>
         <tasks>
           <echo>Connected to DB : ${db.url}</echo>                       
         </tasks>
       </configuration>                
      </execution></executions>              
  </plugin>
	. . .
<profiles>
 <profile>
   <id>dev</id>          
   <properties>
   <db.url>jdbc:mysql://localhost:3306/dev</db.url>
   </properties>
 </profile>
 <profile>
  <id>prod</id>          
  <properties>
  <db.url>jdbc:mysql://live01:3306/prod</db.url>
  </properties>
 </profile>
</profiles>
Activate profile explicitly using -P option

$mvn compile -Pdev

O/P :

[INFO] --- maven-antrun-plugin:1.1:run (id.compile) @ maven-test ---
[INFO] Executing tasks
[echo] Connected to DB :jdbc:mysql://localhost:3306/dev
$mvn compile -Pprod

O/P :

[INFO] --- maven-antrun-plugin:1.1:run (id.compile) @ maven-test ---
[INFO] Executing tasks
[echo] Connected to DB :jdbc:mysql://live01:3306/prod

======================================================================================

Profile Activation - Maven Settings
Activate profile in Maven settings.xml file available at %USER_HOME%/.m2 directory as follows:

<settings xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
   http://maven.apache.org/xsd/settings-1.0.0.xsd">
   <mirrors>
    <mirror>
         <id>com.testorg.companyname</id>
         <name>Internal Artifactory Maven repository</name>
         <url>http://repo1.maven.org/maven2/</url>
         <mirrorOf>*</mirrorOf>
    </mirror>
   </mirrors>
   <activeProfiles>
      <activeProfile>dev</activeProfile>
   </activeProfiles>
</settings>

======================================================================================

Profile Activation - Environment Variables
Provide the profile activation details through environment variables
Create an environment variable 'env' and set its value as 'test'
In pom.xml, configure profile 'test' to be activated, if 'env' property value is set as 'test'
<profile>
   <id>test</id>
   <activation>
      <property>
         <name>env</name>
         <value>test</value>
      </property>
   </activation>
</profile>
$mvn compile

Note: Profile test will be activated automatically without explicitly activating it using -P option

======================================================================================

Profile Activation – OS settings
Pom.xml

...
<execution>
   <id>id.compile</id>
   <phase>compile</phase>
   <goals> <goal>run</goal></goals>                         
  <configuration>
    <tasks>
      <echo>${my.os}</echo>          
   </tasks>
  </configuration>
</execution>
...
<profiles>
 <profile>
   <id>unix</id> 
   <activation>
      <os>
         <family>unix</family>
      </os>
   </activation>         
   <properties>
      <my.os>I am on Ubuntu System</my.os>
   </properties>
 </profile>
 <profile>
   <id>windows</id>  
      <activation>
         <os>
            <family>windows</family>
         </os>
      </activation>         
      <properties>
        <my.os>I am on Windows System</my.os>
      </properties>
  </profile>
 </profiles>
...
If you are running Windows OS, profile windows will be activated automatically.
$mvn compile - [echo] I am on Windows System
If you execute from Ubuntu system, profile unix will be activated automatically.
$mvn compile - [echo] I am on Ubuntu System

======================================================================================

Profile Activation –Present/Missing Files
Profile1 will be activated if file1.properties is present in src/main/resources folder.

<profile>
 <id>profile1</id>
 <activation>
  <file>
    <exists>src/main/resources/file1.properties</exists>
  </file>
</profile>
Profile2 will be activated if file1.properties is not present in src/main/resources folder.

<profile>
 <id>profile2</id>
 <activation>
  <file>
    <missing>src/main/resources/file1.properties</missing>
  </file>
</profile>

======================================================================================

List Active Build Profiles
Maven profiles can be defined in one or more of the below files.

pom.xml
`profiles.xml`
`~/.m2/settings.xml`
${M2_HOME}/conf/settings.xml
Multiple profiles can be activated at a time.

$mvn -P profile1,profile2 package
Maven Help plugin's active-profiles goal lists all the active profiles and where they have been defined.
$ mvn help:active-profiles
Active Profiles for Project 'My Project':

The following profiles are active:
- my-settings-profile (source: settings.xml)
- my-external-profile (source: profiles.xml)
- my-internal-profile (source: pom.xml)

======================================================================================
