

1. Custom Plugin in GradleGetting started,Select Run Tests to execute test cases and know your test results once you finish the challenge.Create a Gradle java application named gradleApp in the path /projects/challenge.In gradleApp, create a custom plugin named customPlugin with an extension object named greaterThan.In the custom plugin, create a task named greaterThan which prints the greatest of two numbers.Use variables named var1 and var2 to create the program and specify the input value of var1 as 50 and var2 as 30.Note:The custom plugin should generate the output in the following format: "The greater number is: number".




/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'customPlugin'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'gradleApp.App'
}

interface customPluginExtension {
    Property<Int> getvar1()
    Property<Int> getvar2()
}

class customPlugin implements Plugin<Project> {
    void apply(Project project) {
        def extension = project.extensions.create('greeting', customPluginExtension)
        project.task('greaterThan') {
            doLast {
                println "The greatest number is:${extension.var1.get()} ? ${extension.var1.get()}> ${extension.var2.get()} : ${extension.var2.get()}"
            }
        }
    }
}



// Configure the extension using a DSL block
greeting {
    var1 = 50
    var2 = 30
}